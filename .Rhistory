r <- c(4,3,2,1)
r
plot(r)
rm(list=ls())
setwd("~/Documents/Programming/JLBaroja.github.io")
phi <- (1+5^(1/2))/2
to_cartesian <- function(radius,angle) {
x <- radius*cos(angle)
y <- radius*sin(angle)
return(list(x=x,y=y))
}
draw_ring <- function(outter_radius,inner_radius,
color='#000000') {
theta <- seq(0,2*pi,length.out=160)
outter <- to_cartesian(outter_radius,theta)
inner <- to_cartesian(inner_radius,theta)
polygon(x=c(outter$x,inner$x[length(inner$x):1]),
y=c(outter$y,inner$y[length(inner$y):1]),
col=color,border=NA)
}
make_logo <- function(n_rings=3) {
# Generate rings coordinates
outters <- 1
for (i in 2:(n_rings+1)) {
outters[i] <- outters[(i-1)]-outters[(i-1)]/phi
}
inners <- NULL
for(j in 1:n_rings){
inners[j] <- outters[j]-((outters[j]-outters[(j+1)])/phi)
}
# Make plto
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
for(r in 1:n_rings){
draw_ring(outters[r],inners[r])
}
}
spiral <- function(r) {
theta <- (pi*log(r))/(2*log(phi))
return(list(r=r,theta=theta))
}
# svg('center_logo.svg',width=5,height=5)
png('center_logo.png',width=300,height=300)
par(mar=rep(.5,4))
make_logo()
dev.off()
pdf('spiral_logo.pdf',width=4,height=4)
par(mar=rep(0,4))
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
radiuses <- seq(0,1,0.05)
spiral_polar <- spiral(radiuses)
spiral_cartesian <- to_cartesian(spiral_polar$r,spiral_polar$theta)
for(i in which(!is.na(spiral_cartesian$x))){
draw_ring(radiuses[i],radiuses[(i-1)])
}
points(spiral_cartesian$x,spiral_cartesian$y,col='yellow',pch=16,type='o')
dev.off()
rm(list=ls())
setwd("~/Documents/Programming/JLBaroja.github.io")
phi <- (1+5^(1/2))/2
to_cartesian <- function(radius,angle) {
x <- radius*cos(angle)
y <- radius*sin(angle)
return(list(x=x,y=y))
}
draw_ring <- function(outter_radius,inner_radius,
color='#000000') {
theta <- seq(0,2*pi,length.out=160)
outter <- to_cartesian(outter_radius,theta)
inner <- to_cartesian(inner_radius,theta)
polygon(x=c(outter$x,inner$x[length(inner$x):1]),
y=c(outter$y,inner$y[length(inner$y):1]),
col=color,border=NA)
}
make_logo <- function(n_rings=3) {
# Generate rings coordinates
outters <- 1
for (i in 2:(n_rings+1)) {
outters[i] <- outters[(i-1)]-outters[(i-1)]/phi
}
inners <- NULL
for(j in 1:n_rings){
inners[j] <- outters[j]-((outters[j]-outters[(j+1)])/phi)
}
# Make plto
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
for(r in 1:n_rings){
draw_ring(outters[r],inners[r])
}
}
spiral <- function(r,delta_angle=0) {
theta <- (pi*log(r))/(2*log(phi))+delta_angle
return(list(r=r,theta=theta))
}
# svg('center_logo.svg',width=5,height=5)
png('center_logo.png',width=300,height=300)
par(mar=rep(.5,4))
make_logo()
dev.off()
pdf('spiral_logo.pdf',width=4,height=4)
par(mar=rep(0,4))
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
radiuses <- seq(0,1,0.05)
spiral_polar <- spiral(radiuses)
spiral_polar_2 <- spiral(radiuses,delta_angle = pi)
spiral_cartesian <- to_cartesian(spiral_polar$r,spiral_polar$theta)
spiral_cartesian_2 <- to_cartesian(spiral_polar_2$r,spiral_polar_2$theta)
for(i in which(!is.na(spiral_cartesian$x))){
draw_ring(radiuses[i],radiuses[(i-1)])
}
points(spiral_cartesian$x,spiral_cartesian$y,col='yellow',pch=16,type='o')
points(spiral_cartesian_2$x,spiral_cartesian_2$y,col='red',pch=16,type='o')
dev.off()
rm(list=ls())
setwd("~/Documents/Programming/JLBaroja.github.io")
phi <- (1+5^(1/2))/2
to_cartesian <- function(radius,angle) {
x <- radius*cos(angle)
y <- radius*sin(angle)
return(list(x=x,y=y))
}
draw_ring <- function(outter_radius,inner_radius,
color='#000000') {
theta <- seq(0,2*pi,length.out=160)
outter <- to_cartesian(outter_radius,theta)
inner <- to_cartesian(inner_radius,theta)
polygon(x=c(outter$x,inner$x[length(inner$x):1]),
y=c(outter$y,inner$y[length(inner$y):1]),
col=color,border=NA)
}
make_logo <- function(n_rings=3) {
# Generate rings coordinates
outters <- 1
for (i in 2:(n_rings+1)) {
outters[i] <- outters[(i-1)]-outters[(i-1)]/phi
}
inners <- NULL
for(j in 1:n_rings){
inners[j] <- outters[j]-((outters[j]-outters[(j+1)])/phi)
}
# Make plto
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
for(r in 1:n_rings){
draw_ring(outters[r],inners[r])
}
}
spiral <- function(r,delta_angle=0) {
theta <- (pi*log(r))/(2*log(phi))+delta_angle
return(list(r=r,theta=theta))
}
# svg('center_logo.svg',width=5,height=5)
png('center_logo.png',width=300,height=300)
par(mar=rep(.5,4))
make_logo()
dev.off()
pdf('spiral_logo.pdf',width=4,height=4)
par(mar=rep(0,4))
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
radiuses <- seq(0,1,0.025)
spiral_polar <- spiral(radiuses)
spiral_polar_2 <- spiral(radiuses,delta_angle = pi)
spiral_cartesian <- to_cartesian(spiral_polar$r,spiral_polar$theta)
spiral_cartesian_2 <- to_cartesian(spiral_polar_2$r,spiral_polar_2$theta)
for(i in which(!is.na(spiral_cartesian$x))){
draw_ring(radiuses[i],radiuses[(i-1)])
}
points(spiral_cartesian$x,spiral_cartesian$y,col='yellow',cex=.5,pch=16,type='o')
points(spiral_cartesian_2$x,spiral_cartesian_2$y,col='red',cex=.5,pch=16,type='o')
dev.off()
rm(list=ls())
setwd("~/Documents/Programming/JLBaroja.github.io")
phi <- (1+5^(1/2))/2
to_cartesian <- function(radius,angle) {
x <- radius*cos(angle)
y <- radius*sin(angle)
return(list(x=x,y=y))
}
draw_ring <- function(outter_radius,inner_radius,
color='#000000') {
theta <- seq(0,2*pi,length.out=160)
outter <- to_cartesian(outter_radius,theta)
inner <- to_cartesian(inner_radius,theta)
polygon(x=c(outter$x,inner$x[length(inner$x):1]),
y=c(outter$y,inner$y[length(inner$y):1]),
col=color,border=NA)
}
make_logo <- function(n_rings=3) {
# Generate rings coordinates
outters <- 1
for (i in 2:(n_rings+1)) {
outters[i] <- outters[(i-1)]-outters[(i-1)]/phi
}
inners <- NULL
for(j in 1:n_rings){
inners[j] <- outters[j]-((outters[j]-outters[(j+1)])/phi)
}
# Make plto
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
for(r in 1:n_rings){
draw_ring(outters[r],inners[r])
}
}
spiral <- function(r,delta_angle=0) {
theta <- (pi*log(r))/(2*log(phi))+delta_angle
return(list(r=r,theta=theta))
}
# svg('center_logo.svg',width=5,height=5)
png('center_logo.png',width=300,height=300)
par(mar=rep(.5,4))
make_logo()
dev.off()
pdf('spiral_logo.pdf',width=4,height=4)
par(mar=rep(0,4))
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
radiuses <- seq(0,1,0.01)
spiral_polar <- spiral(radiuses)
spiral_polar_2 <- spiral(radiuses,delta_angle = pi)
spiral_cartesian <- to_cartesian(spiral_polar$r,spiral_polar$theta)
spiral_cartesian_2 <- to_cartesian(spiral_polar_2$r,spiral_polar_2$theta)
for(i in which(!is.na(spiral_cartesian$x))){
draw_ring(radiuses[i],radiuses[(i-1)])
}
points(spiral_cartesian$x,spiral_cartesian$y,col='yellow',cex=.5,pch=16,type='o')
points(spiral_cartesian_2$x,spiral_cartesian_2$y,col='red',cex=.5,pch=16,type='o')
dev.off()
rm(list=ls())
setwd("~/Documents/Programming/JLBaroja.github.io")
phi <- (1+5^(1/2))/2
to_cartesian <- function(radius,angle) {
x <- radius*cos(angle)
y <- radius*sin(angle)
return(list(x=x,y=y))
}
draw_ring <- function(outter_radius,inner_radius,
color='#000000') {
theta <- seq(0,2*pi,length.out=160)
outter <- to_cartesian(outter_radius,theta)
inner <- to_cartesian(inner_radius,theta)
polygon(x=c(outter$x,inner$x[length(inner$x):1]),
y=c(outter$y,inner$y[length(inner$y):1]),
col=color,border=NA)
}
make_logo <- function(n_rings=3) {
# Generate rings coordinates
outters <- 1
for (i in 2:(n_rings+1)) {
outters[i] <- outters[(i-1)]-outters[(i-1)]/phi
}
inners <- NULL
for(j in 1:n_rings){
inners[j] <- outters[j]-((outters[j]-outters[(j+1)])/phi)
}
# Make plto
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
for(r in 1:n_rings){
draw_ring(outters[r],inners[r])
}
}
spiral <- function(r,delta_angle=0) {
theta <- (pi*log(r))/(2*log(phi))+delta_angle
return(list(r=r,theta=theta))
}
# svg('center_logo.svg',width=5,height=5)
png('center_logo.png',width=300,height=300)
par(mar=rep(.5,4))
make_logo()
dev.off()
pdf('spiral_logo.pdf',width=4,height=4)
par(mar=rep(0,4))
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
radiuses <- seq(0,1,0.1)
spiral_polar <- spiral(radiuses)
spiral_polar_2 <- spiral(radiuses,delta_angle = pi)
spiral_cartesian <- to_cartesian(spiral_polar$r,spiral_polar$theta)
spiral_cartesian_2 <- to_cartesian(spiral_polar_2$r,spiral_polar_2$theta)
for(i in which(!is.na(spiral_cartesian$x))){
draw_ring(radiuses[i],radiuses[(i-1)])
}
points(spiral_cartesian$x,spiral_cartesian$y,col='yellow',cex=.5,pch=16,type='o')
points(spiral_cartesian_2$x,spiral_cartesian_2$y,col='red',cex=.5,pch=16,type='o')
dev.off()
rm(list=ls())
setwd("~/Documents/Programming/JLBaroja.github.io")
phi <- (1+5^(1/2))/2
to_cartesian <- function(radius,angle) {
x <- radius*cos(angle)
y <- radius*sin(angle)
return(list(x=x,y=y))
}
draw_ring <- function(outter_radius,inner_radius,
color='#000000') {
theta <- seq(0,2*pi,length.out=160)
outter <- to_cartesian(outter_radius,theta)
inner <- to_cartesian(inner_radius,theta)
polygon(x=c(outter$x,inner$x[length(inner$x):1]),
y=c(outter$y,inner$y[length(inner$y):1]),
col=color,border=NA)
}
make_logo <- function(n_rings=3) {
# Generate rings coordinates
outters <- 1
for (i in 2:(n_rings+1)) {
outters[i] <- outters[(i-1)]-outters[(i-1)]/phi
}
inners <- NULL
for(j in 1:n_rings){
inners[j] <- outters[j]-((outters[j]-outters[(j+1)])/phi)
}
# Make plto
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
for(r in 1:n_rings){
draw_ring(outters[r],inners[r])
}
}
spiral <- function(r,delta_angle=0) {
theta <- (pi*log(r))/(2*log(phi))+delta_angle
return(list(r=r,theta=theta))
}
# svg('center_logo.svg',width=5,height=5)
png('center_logo.png',width=300,height=300)
par(mar=rep(.5,4))
make_logo()
dev.off()
pdf('spiral_logo.pdf',width=4,height=4)
par(mar=rep(0,4))
plot(0,type='n',ylim=c(-1,1),xlim=c(-1,1),
ann=F,axes=F)
radiuses <- seq(0,1,0.05)
spiral_polar <- spiral(radiuses)
spiral_polar_2 <- spiral(radiuses,delta_angle = pi)
spiral_cartesian <- to_cartesian(spiral_polar$r,spiral_polar$theta)
spiral_cartesian_2 <- to_cartesian(spiral_polar_2$r,spiral_polar_2$theta)
for(i in which(!is.na(spiral_cartesian$x))){
draw_ring(radiuses[i],radiuses[(i-1)])
}
points(spiral_cartesian$x,spiral_cartesian$y,col='yellow',cex=.5,pch=16,type='o')
points(spiral_cartesian_2$x,spiral_cartesian_2$y,col='red',cex=.5,pch=16,type='o')
dev.off()
